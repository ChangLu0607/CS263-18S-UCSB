#coding:cp936
import time
import getpass
import threading
import os
 
def EntryFunction(f):
    def _(*args,**tw):
        result = f(*args,**tw)
        print("=== Process End ===")
        getpass.getpass("")
        return result
    return _()
     
def Stopwatch(f):
    def _(*args,**tw):
        t1 = time.time()
        f(*args,**tw)
        t2 = time.time()
        return t2-t1
    return _
 
class Handler(threading.Thread):
    def __init__(self,father):
        super(Handler,self).__init__()
        self.father = father
    def run(self):
        return self.father.run()
     
class Compute_ST(object):
    """one thread"""
    def __init__(self,run_time):
        self.run_time = run_time
 
    def run(self):
        s = 0
        for i in range(10000):
            s += i
        return s
 
    @Stopwatch
    def start(self):
        for i in range(self.run_time):
            self.run()
 
class Compute_MT(object):
    """multi-thread"""
    def __init__(self,run_time):
        self.threads = [Handler(self) for i in range(0,run_time)]
        self.runing_thread = 0
         
    def run(self):
        self.runing_thread += 1
        s = 0
        for i in range(10000):
            s += i
        self.runing_thread -= 1
        return s
         
    @Stopwatch
    def start(self):
        for t in self.threads:
            t.start()
        while self.runing_thread > 0:
            pass
 
class IO_ST(Compute_ST):
    """one thread"""
    def run(self):
        r = os.popen("ping 127.0.0.1")
        return r.read()
 
class IO_MT(Compute_MT):
    """multi thread"""
    def run(self):
        self.runing_thread += 1
        r = os.popen("ping 127.0.0.1")
        t = r.read()
        self.runing_thread -= 1
        return t
             
@EntryFunction
def main():
    n = 100
     
    test = Compute_ST(n)
    print(test.__doc__)
    t = test.start()
    print(t)
     
    test = Compute_MT(n)
    print(test.__doc__)
    t = test.start()
    print(t)
     
    n = 10
     
    test = IO_ST(n)
    print(test.__doc__)
    t = test.start()
    print(t)
     
    test = IO_MT(n)
    print(test.__doc__)
    t = test.start()
    print(t)